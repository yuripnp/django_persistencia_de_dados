1 - criar ambiente virtual:  virtualenv <nome_do_ambiente> 
    por padrão o nome é virtualenv
2 - ativar o ambiente virtual: source ./venv/bin/activate
3 - instalar o django: pip install django
4 - mostrando as dependencias do projeto : pip freeze
5 - criando um arquivo txt para mostrar todas as dependencias que precisamos instalar: pip freeze > requirements.txt (manter sempre atualziado)
6 - criando o projeto django: django-admin startproject setup . (colocar como "setup" é um padrão para nome dos projetos e o "." no final, ele não cria uma subpasta com o mesmo nome)
7 - comando para rodar o o servidor: python manage.py runserver (o arquivo manage.py que sobe o servidor)
8 - colocando variaveis de ambiente para proteger as secret-key: pip install python-dotenv
9 - lembre-se de atualizar o arquivo requirements
10 - criando um app, que representa uma pagina ou função no meu sistema django: python manage.py startapp galeria
11 - usando o comando para renderizar os arquivos staticos para o django: python manage.py collectstatic (deve criar um diretorio com nome static)
12 - em projetos novos, podemos instalar todos os arquivos dentro do requirements.txt: pip install -r requirements.txt
13 - ajudar a mostrar os comandos do django que podemos fazer: python manage.py help
14 - quero criar uma migrations com as minhas models: python manage.py  makemigrations
15 - criar o  meu banco de dados com as minhas models, gerando tabelas e atributos: python manage.py migrate
16 - usar o power shell dentro do django: python manage.py shell
17 - precisamos criar um usuario que tenha caracteristicas de um usuario admin : python manage.py createsuperuser
18 - toda vez que alguém alterar uma model, 
